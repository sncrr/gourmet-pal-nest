// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  email     String         @unique
  password  String?
  authType  String?
  firstName String?
  lastName  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now())
  followers UserFollower[] @relation(name: "UserFollowers")
  followeds UserFollower[] @relation(name: "FollowedUsers")
  recipes   Recipe[]       @relation(name: "RecipeToUser")
  comments  Comment[]      @relation(name: "CommentToUser")
  savors    Savor[]        @relation(name: "SavorToUser")

  @@map("users")
}

model UserFollower {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  userId     String @db.ObjectId
  followedId String @db.ObjectId
  user       User   @relation(name: "UserFollowers", fields: [userId], references: [id])
  followed   User   @relation(name: "FollowedUsers", fields: [followedId], references: [id])

  @@map("user_followers")
}

model Recipe {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  userId      String             @db.ObjectId
  name        String
  description String
  prepTime    Int
  cookTime    Int
  servings    Int
  privacy     String             @default("private")
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @default(now())
  images      RecipeImage[]      @relation(name: "RecipeToRecipeImage")
  ingredients RecipeIngredient[] @relation(name: "RecipeToRecipeIngredient")
  steps       RecipeStep[]       @relation(name: "RecipeToRecipeStep")
  user        User               @relation(name: "RecipeToUser", fields: [userId], references: [id])
  comments    Comment[]          @relation(name: "CommentToRecipe")
  savors      Savor[]            @relation(name: "RecipeToSavor")

  @@map("recipe")
}

model RecipeImage {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  path     String
  recipe   Recipe @relation(name: "RecipeToRecipeImage", fields: [recipeId], references: [id])

  @@map("recipe_images")
}

model RecipeIngredient {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  recipeId     String     @db.ObjectId
  ingredientId String     @db.ObjectId
  unit         String
  qty          String
  recipe       Recipe     @relation(name: "RecipeToRecipeIngredient", fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(name: "IngredientToRecipeIngredient", fields: [ingredientId], references: [id])

  @@map("recipe_ingredients")
}

model RecipeStep {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId    String @db.ObjectId
  stepNumber  Int
  instruction String
  recipe      Recipe @relation(name: "RecipeToRecipeStep", fields: [recipeId], references: [id])

  @@map("recipe_steps")
}

model Ingredient {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  recipeIngredients RecipeIngredient[] @relation(name: "IngredientToRecipeIngredient")
  name              String
  image             String?

  @@map("ingredients")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  recipeId  String   @db.ObjectId
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(name: "CommentToUser", fields: [userId], references: [id])
  recipe    Recipe   @relation(name: "CommentToRecipe", fields: [recipeId], references: [id])

  @@map("comments")
}

model Savor {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  recipeId  String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(name: "SavorToUser", fields: [userId], references: [id])
  recipe    Recipe   @relation(name: "RecipeToSavor", fields: [recipeId], references: [id])

  @@map("savor")
}
